version: "3.9"

services:
  # Development tools
  node:
    image: node:20-alpine
    container_name: node-dev
    working_dir: /app
    volumes:
      - ..:/app
      - node_modules:/app/node_modules
    ports:
      - "3000:3000"
      - "3001:3001"
      - "9229:9229"  # Node.js debugging
    command: sh -c "npm install && npm run dev"
    environment:
      - NODE_ENV=development
    networks:
      - dev-network
    profiles:
      - node

  php:
    image: php:8.2-apache
    container_name: php-dev
    volumes:
      - ..:/var/www/html
    ports:
      - "8000:80"
    environment:
      - APACHE_DOCUMENT_ROOT=/var/www/html/public
    networks:
      - dev-network
    profiles:
      - php

  nginx:
    image: nginx:alpine
    container_name: nginx-dev
    volumes:
      - ../nginx.conf:/etc/nginx/nginx.conf:ro
      - ..:/usr/share/nginx/html:ro
    ports:
      - "80:80"
      - "443:443"
    networks:
      - dev-network
    profiles:
      - nginx

  # Database management tools
  phpmyadmin:
    image: phpmyadmin:latest
    container_name: phpmyadmin
    restart: unless-stopped
    ports:
      - "8083:80"
    environment:
      PMA_HOST: mariadb
      PMA_USER: root
      PMA_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password
    networks:
      - dev-network
    depends_on:
      - mariadb
    profiles:
      - admin

  # Development database (lightweight alternatives)
  sqlite:
    image: nouchka/sqlite3:latest
    container_name: sqlite-dev
    stdin_open: true
    tty: true
    volumes:
      - sqlite_data:/data
      - ./data:/root/.sqlite
    networks:
      - dev-network
    profiles:
      - sqlite

  # Monitoring and logging
  seq:
    image: datalust/seq:latest
    container_name: seq
    restart: unless-stopped
    ports:
      - "5341:80"
    environment:
      - ACCEPT_EULA=Y
    volumes:
      - seq_data:/data
    networks:
      - dev-network
    profiles:
      - monitoring

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    restart: unless-stopped
    ports:
      - "16686:16686"
      - "14268:14268"
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    networks:
      - dev-network
    profiles:
      - monitoring

  # Message queue
  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: dev
      RABBITMQ_DEFAULT_PASS: dev123
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - dev-network
    profiles:
      - queue

  # Search engine
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - dev-network
    profiles:
      - search

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: kibana
    restart: unless-stopped
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    networks:
      - dev-network
    depends_on:
      - elasticsearch
    profiles:
      - search

volumes:
  node_modules:
    driver: local
  sqlite_data:
    driver: local
  seq_data:
    driver: local
  rabbitmq_data:
    driver: local
  elasticsearch_data:
    driver: local

networks:
  dev-network:
    external: true